Q1. One of the components of a computer is its CPU. What is a CPU and what role does it play in a computer?
많은 교재에서 CPU를 뇌에 비유합니다. CPU는 조그만 트랜지스터들이 모여 만들어진 산술 연산을 위한 반도체 집합이다.
컴퓨터가 동작하기 위해 필요한 모든 작업은 cpu를 거치게 되며 cpu내부에는 산술 논리 장치 캐시메모리 레지스터가 있다.
레지스터는 cpu연산과정중 필요한 부분을 잠시 기억하는 용도로 사용되는 장치이다. 레지스터는 단순히 연산과정에 필요한 것 뿐 아니라
다양한 동작을 위한 것도 있는데 그중 하나가 프로그램 카운터 즉, PC는 바로 다음에 실행될 다음 명령어의 주소를 저장합니다.
캐시메모리도 저장을 위해 존재하며 레지스터를 제외하면 가장 빠르게 접근가능한 메모리이다.
캐시 메모리는 빠르기와 용량이 반비례하여 가장 빠른것부터 Level1~Level3까지 존재한다.

Q2Explain what is meant by an "asynchronous event." Give some examples.
일반적으로asynchronous event는 저장장치에 저장된 자료들을 불러오거나 모니터에 무언가를 표시하거나 통신을 통해 무언가를 처리할때
사용된다. CPU는 컴퓨터 부품중 가장 빠르고 가장 적은 저장용량을 가지고 있기 때문에 한가지 일을 진득하게 처리하는 것은 굉장히 비효율 적이다.
때문에 인터럽트를 이용하여 그 속도를 조절한다. 배달대행과 음식점의 관계를 생각하면 쉽다. 배달대행이 여러가지 콜을 잡아놓고 순서에 상관없이
이미 음식이 준비된 음식점부터 가는것과 동일한 이치이다.

Q3What is the difference between a "compiler" and an "interpreter"?
단순하게 고급언어를 기계언어로 번역한다는 큰 의미는 동일하지만 컴파일러는 프로그램 전체를 번역하고
인터프리터는 프로그램의 코드 한줄씩을 번역한다는 것이 다르다.

Q4 Explain the difference between high-level languages and machine language.
high-level languages는 프로그램밍을 위해 고안된 언어로 인간보다는 컴퓨터에 가까운 방식이지만 완전히 컴퓨터에 맞춤으로 만들어진
언어는 아니기 때문에 이또한 번역의 과정을 거쳐야한다. 이렇게 high-level languages를 컴퓨터친화적으로 번역하면machine language가 된다.

Q5If you have the source code for a Java program, and you want to run that program, you will need both a compiler and an interpreter. 
What does the Java compiler do, and what does the Java interpreter do?
자바는 기본적으로 어느 머신에서든 돌아갈 수 있는 것을 목표로 하는 언어기 때문에 모든 환경에서 호환되기 위해 java virtual muchine 이라는 것을 사용한다.
JVM은 자바가 실행되기 위한 여러가지 패키지들을 포함하고 있으며 때문에 자바를 구동하기 위해선 필수적이다. 자바의 문법으로 작성된 코드들이
작동하기 위해서는 먼저 컴파일러가 자바 바이트코드로 번역해야한다. 이후 해당 번역본을 가지고 인터프리터가 기계언어로 번역하여 실행시키게 되는 것이다.
이는 인터프리터가 플랫폼에 종속되지 않는다는 장점을 가지고 있기 떄문이다.

Q6 What is a subroutine?
서브루틴은 하나의 작업을 함에 있어서 해당 작업을 나누어서 실행하기 위해 조각낸것을 다시 패키징한것이다.
예를 들어 요리를 할때 재료를 꺼내오고 재료를 자르고 재료를 다시 넣는 행위를 재료를 준비한다라는 말로 패키징하면
요리도중에 재료가 필요할때마다 재료를 준비한다는 루틴을 불러오는 것으로 대체가능하다는 것이다.

Q7 Java is an object-oriented programming language. What is an object?
객체란 특정한 입력을가지고 특정한 명령을 도출하는 기계이다. 이 조합을 객체라고 하는데 객체 지향 언어의 방식은
중복되는 코드를 어느정도 줄이기 위함이다. 만약 앞서 서술한 재료를 준비한다라는 행위모음이 있을때 이것이 없다면
요리를 할때 매번 재료를 꺼내오고, 재료를 자르고 재료를 다시 넣으라고 명령해야한다. 객체 지향은 이것을 재료를 준비한다라는
행위모음 그리고 행위에 의한 결과가 어떤지를 나타내는 것을 모아 모듈화하여 필요할때 해당 모듈을 꺼내어 사용하는 것이다.

Q8What is a variable? (There are four different ideas associated with variables in Java. Try to mention all four aspects in your answer. Hint: One of the aspects is the variable's name.)
변수는 메모리 위치를 쉽게 접근하기 위해 메모리의 주소에 이름을 지어준 것이다. 또한 변수는 type을 가지고 생성되는데 type은 해당 변수가
어떤 값을 가르키는지 접근하지 않고 알아보기 위해서 주어진 것이다.  변수를 보다 다양한 방법으로 사용하기 위해서 우리는 control structures라는 것을 이용하여  control flow 에 간섭할 수 있다.
어떤 지시를 반복하는 loop와 어떤 조건을 달아 조건에 따라 행동하는 branch가 해당한다. 마지막으로 subroutine을 통해 일련의 명령어들을 포장하여 원하는 결과를 도출해내고
이후에 해당 다시 같은 결과를 도출해야할 떄 사용가능하다.

Q9Java is a "platform-independent language." What does this mean?
앞서 Q5에서 서술했듯이 자바는 JVM을 활용하여 어느 플랫폼에나 존재하는 인터프리터를 이용하는 언어이기 때문에
하나의 플랫폼( ex)Window, macOS...)에 종속되지 않는다.

Q10What is the "Internet"? Give some examples of how it is used. (What kind of services does it provide?)
인터넷은 현실세계의 예로 들자면 하나의 도로다. 도로는 패킷이라는 이름의 차량들이 다니며 원하는 건물에 가기위해서는 IP라는 지정된 주소가 필요하고
이것에 이름을 붙힌것이 도메인이다. 패킷이라는 이름의 차량들이 화물과 함께 원하는 IP에 도착하기 위해선 프로토콜이라는 검문을 통과해야만 한다.
